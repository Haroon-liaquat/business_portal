<?php

/**
 * @file
 * Contains jazz_complaint.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function jazz_complaint_help($route_name, RouteMatchInterface $route_match)
{
  switch ($route_name) {
      // Main module help for the jazz_complaint module.
    case 'help.page.jazz_complaint':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Jazz complaint module') . '</p>';
      return $output;

    default:
  }
}




//hook_form_alter
function jazz_complaint_form_alter(&$form, $form_state, $form_id)
{
  if ($form_id == "node_jazz_complaint_form") {
    $form['actions']['submit']['#submit'][] = "nodeSubmitRedirectToComplaint";
  }
  if ($form_id=='views_exposed_form' && $form['#id']=='views-exposed-form-manage-complaints-page-1') {

    $form['field_priority_value']['#options']['All'] = 'Filter';
  }
}


function  nodeSubmitRedirectToComplaint(array &$form, FormStateInterface $form_state)
{
  $node = $form_state->getFormObject()->getEntity();
  $uniqId = hexdec(uniqid());
  $node->field_complaint_ticket->setValue( $uniqId );
  $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
  $node->setOwner($user);
  if($user->field_full_name->value)
  {
    $node->setTitle($user->field_full_name->value);
  }
  $node->save();
  $form_state->setRedirect('jazz_complaint.submit_complaint_controller_view_complaint', ['node' => $node->id()]);
}

// ---------------------- //
function jazz_complaint_page_attachments(array &$attachments) {
  // Unconditionally attach the mymodule/lrv library.
  $attachments['#attached']['library'][] = 'jazz_complaint/jazz_Complaints';
}

/**
 * Implements hook_theme().
 */
function jazz_complaint_theme($existing, $type, $theme, $path)
{
  return [
    'jazz_complaint' => [
      'render element' => 'children',
    ],
    'jazz_complaint_submit' => [
      'render element' => 'children',
      'variables' => [
        'data' => []
      ]
    ],
    'search_complaint_form' => [
      'render element' => 'form',
    ],
    'submit_complaint_form' => [
      'render element' => 'form',
    ],
  // Views templates.
  'manage_complaint_views_view' => [
    'template' => 'manage-complaint-views-view',
    'base hook' => 'views_view',
    'path' => $path . '/templates/views'
  ],
  // Views unformatted templates.
  'manage_complaint_views_view_unformated' => [
    'template' => 'manage-complaint-views-view-unformated',
    'base hook' => 'views_view_unformatted',
    'path' => $path . '/templates/views'
  ],
  // Views unformatted templates.
  'manage_complaint_view_fields' => [
    'template' => 'manage-complaint-view-fields',
    'base hook' => 'views_view_fields',
    'path' => $path . '/templates/views'
  ],
];
}

/**
* Implements hook_theme_suggestions_page_alter().
*/
function jazz_complaint_theme_suggestions_views_view_alter(array &$suggestions, array $variables)
{
$view = $variables['view'];
if ($view->id() == "manage_complaints" && $view->current_display == "page_1") {
  $suggestions[] = "manage_complaint_views_view";
}
}

/**
* Implements hook_theme_suggestions_HOOK_alter().
*
* Add views unformatted template suggestions.
* 
* @inheritdoc
*/
function jazz_complaint_theme_suggestions_views_view_unformatted_alter(array &$suggestions, array $variables)
{
$view = $variables['view'];
if ($view->id() == "manage_complaints" && $view->current_display == "page_1") {
  $suggestions[] = "manage_complaint_views_view_unformated";
}
}

/**
* Implements hook_theme_suggestions_HOOK_alter().
*
* Add views unformatted template suggestions.
* 
* @inheritdoc
*/
function jazz_complaint_theme_suggestions_views_view_fields_alter(array &$suggestions, array $variables)
{
$view = $variables['view'];
if ($view->id() == "manage_complaints" && $view->current_display == "page_1") {
  $suggestions[] = "manage_complaint_view_fields";
}
}